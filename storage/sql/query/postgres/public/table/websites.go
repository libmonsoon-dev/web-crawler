//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Websites = newWebsitesTable("public", "websites", "")

type websitesTable struct {
	postgres.Table

	//Columns
	ID   postgres.ColumnInteger
	Host postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type WebsitesTable struct {
	websitesTable

	EXCLUDED websitesTable
}

// AS creates new WebsitesTable with assigned alias
func (a WebsitesTable) AS(alias string) *WebsitesTable {
	return newWebsitesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new WebsitesTable with assigned schema name
func (a WebsitesTable) FromSchema(schemaName string) *WebsitesTable {
	return newWebsitesTable(schemaName, a.TableName(), a.Alias())
}

func newWebsitesTable(schemaName, tableName, alias string) *WebsitesTable {
	return &WebsitesTable{
		websitesTable: newWebsitesTableImpl(schemaName, tableName, alias),
		EXCLUDED:      newWebsitesTableImpl("", "excluded", ""),
	}
}

func newWebsitesTableImpl(schemaName, tableName, alias string) websitesTable {
	var (
		IDColumn       = postgres.IntegerColumn("id")
		HostColumn     = postgres.StringColumn("host")
		allColumns     = postgres.ColumnList{IDColumn, HostColumn}
		mutableColumns = postgres.ColumnList{HostColumn}
	)

	return websitesTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:   IDColumn,
		Host: HostColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
