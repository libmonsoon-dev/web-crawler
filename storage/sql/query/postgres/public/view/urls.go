//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Urls = newUrlsTable("public", "urls", "")

type urlsTable struct {
	postgres.Table

	//Columns
	URL        postgres.ColumnString
	WebsiteID  postgres.ColumnInteger
	ResourceID postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type UrlsTable struct {
	urlsTable

	EXCLUDED urlsTable
}

// AS creates new UrlsTable with assigned alias
func (a UrlsTable) AS(alias string) *UrlsTable {
	return newUrlsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new UrlsTable with assigned schema name
func (a UrlsTable) FromSchema(schemaName string) *UrlsTable {
	return newUrlsTable(schemaName, a.TableName(), a.Alias())
}

func newUrlsTable(schemaName, tableName, alias string) *UrlsTable {
	return &UrlsTable{
		urlsTable: newUrlsTableImpl(schemaName, tableName, alias),
		EXCLUDED:  newUrlsTableImpl("", "excluded", ""),
	}
}

func newUrlsTableImpl(schemaName, tableName, alias string) urlsTable {
	var (
		URLColumn        = postgres.StringColumn("url")
		WebsiteIDColumn  = postgres.IntegerColumn("website_id")
		ResourceIDColumn = postgres.IntegerColumn("resource_id")
		allColumns       = postgres.ColumnList{URLColumn, WebsiteIDColumn, ResourceIDColumn}
		mutableColumns   = postgres.ColumnList{URLColumn, WebsiteIDColumn, ResourceIDColumn}
	)

	return urlsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		URL:        URLColumn,
		WebsiteID:  WebsiteIDColumn,
		ResourceID: ResourceIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
